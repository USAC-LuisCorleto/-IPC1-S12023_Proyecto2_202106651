package Imágenes;

import static Imágenes.JPEGHandler.runHandler;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Editor extends javax.swing.JFrame {

    public Editor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NF = new javax.swing.JLabel();
        selecImagen = new javax.swing.JButton();
        radBut1 = new javax.swing.JRadioButton();
        radBut2 = new javax.swing.JRadioButton();
        radBut3 = new javax.swing.JRadioButton();
        radBut4 = new javax.swing.JRadioButton();
        radBut5 = new javax.swing.JRadioButton();
        ejecEd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("EDITOR");

        NF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        selecImagen.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        selecImagen.setText("SELECCIONAR IMÁGEN");
        selecImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecImagenActionPerformed(evt);
            }
        });

        radBut1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        buttonGroup1.add(radBut1);
        radBut1.setText("JPEG A BMP y viceversa");
        radBut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBut1ActionPerformed(evt);
            }
        });
        radBut1.setActionCommand("JPEG A BMP y viceversa");

        radBut2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        buttonGroup1.add(radBut2);
        radBut2.setText("Copia JPEG");
        radBut2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBut2ActionPerformed(evt);
            }
        });
        radBut2.setActionCommand("Copia JPEG");

        radBut3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        buttonGroup1.add(radBut3);
        radBut3.setText("Rojo Verde Azul Sepia");
        radBut3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBut3ActionPerformed(evt);
            }
        });
        radBut3.setActionCommand("Rojo Verde Azul Sepia");

        radBut4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        buttonGroup1.add(radBut4);
        radBut4.setText("Modificar imágen");
        radBut4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBut4ActionPerformed(evt);
            }
        });
        radBut4.setActionCommand("Modificar imágen");

        radBut5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        buttonGroup1.add(radBut5);
        radBut5.setText("Blanco y negro");
        radBut5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBut5ActionPerformed(evt);
            }
        });
        radBut5.setActionCommand("Blanco y negro");

        ejecEd.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        ejecEd.setText("EJECUTAR");
        ejecEd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecEdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NF, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(radBut5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(radBut2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(radBut3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(radBut4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(radBut1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(65, 65, 65)
                            .addComponent(selecImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ejecEd, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(218, 218, 218))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NF, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radBut1)
                        .addGap(18, 18, 18)
                        .addComponent(radBut2)
                        .addGap(18, 18, 18)
                        .addComponent(radBut3)
                        .addGap(18, 18, 18)
                        .addComponent(radBut4)
                        .addGap(24, 24, 24)
                        .addComponent(radBut5))
                    .addComponent(selecImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ejecEd, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ejecEdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecEdActionPerformed
        if (buttonGroup1.getSelection() == null || fotoModificar == null) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fotografía y la edición que quiera realizar", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String botónSeleccionado = buttonGroup1.getSelection().getActionCommand();
            System.out.println(botónSeleccionado);

            switch (botónSeleccionado) {
                case "JPEG A BMP y viceversa":
                    if (extensiónFoto.equalsIgnoreCase(".jpg") || extensiónFoto.equalsIgnoreCase(".jpeg")) {
                        System.out.println("No fallo1");
                        JPEGtoBMPImage imágenA = new JPEGtoBMPImage(fotoModificar.getName());
                        System.out.println("No fallo 2");
                        try {
                            System.out.println("No fallo 3");
                            runHandler(imágenA);
                        } catch (Exception ex) {
                        }
                        System.out.println("No fallo 4");
                    } else {
                        if (extensiónFoto.equalsIgnoreCase(".bmp")) {
                            BMPtoJPEGImage imágenB = new BMPtoJPEGImage(fotoModificar.getName());
                            try {
                                runHandler(imágenB);
                            } catch (Exception ex) {
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Archivo no soportado", "Error", JOptionPane.WARNING_MESSAGE);
                        }
                    }
                    break;

                case "Copia JPEG":
                    if (extensiónFoto.equalsIgnoreCase(".jpg") || extensiónFoto.equalsIgnoreCase(".jpeg")) {
                        JPEGImageCopy imágenC = new JPEGImageCopy(fotoModificar.getName());
                        System.out.println("Prueb");
                        try {
                            runHandler(imágenC);
                        } catch (Exception ex) {
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no soportado", "Error", JOptionPane.WARNING_MESSAGE);
                    }
                    break;

                case "Rojo Verde Azul Sepia":
                    if (extensiónFoto.equalsIgnoreCase(".jpg") || extensiónFoto.equalsIgnoreCase(".jpeg")) {
                        JPEGImageHandlerColors imágenC = new JPEGImageHandlerColors(fotoModificar.getName());
                        try {
                            runHandler(imágenC);
                        } catch (Exception ex) {
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no soportado", "Error", JOptionPane.WARNING_MESSAGE);
                    }
                    break;

                case "Blanco y negro":
                    if (extensiónFoto.equalsIgnoreCase(".jpg") || extensiónFoto.equalsIgnoreCase(".jpeg")) {
                        JPEGImageHandlerBN imágenC = new JPEGImageHandlerBN(fotoModificar.getName());
                        try {
                            runHandler(imágenC);
                        } catch (Exception ex) {
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no soportado", "Error", JOptionPane.WARNING_MESSAGE);
                    }
                    break;

                case "Modificar imágen":
                    if (extensiónFoto.equalsIgnoreCase(".jpg") || extensiónFoto.equalsIgnoreCase(".jpeg")) {
                        JPEGImageHandlerRotator imágenC = new JPEGImageHandlerRotator(fotoModificar.getName());
                        try {
                            runHandler(imágenC);
                        } catch (Exception ex) {
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no soportado", "Error", JOptionPane.WARNING_MESSAGE);
                    }
                    break;
            }
        }
    }//GEN-LAST:event_ejecEdActionPerformed

    private void radBut5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBut5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radBut5ActionPerformed

    private void radBut4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBut4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radBut4ActionPerformed

    private void radBut3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBut3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radBut3ActionPerformed

    private void radBut2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBut2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radBut2ActionPerformed

    private void radBut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBut1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radBut1ActionPerformed

    private void selecImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecImagenActionPerformed
        JFileChooser A = new JFileChooser();
        A.setMultiSelectionEnabled(true);
        A.setFileSelectionMode(JFileChooser.FILES_ONLY);

        FileNameExtensionFilter img = new FileNameExtensionFilter("Archivos JPEG & BMP", "jpg", "jpeg", "bmp");
        A.setFileFilter(img);

        int s = A.showOpenDialog(this);

        if (s != JFileChooser.CANCEL_OPTION) {

            fotoModificar = A.getSelectedFile();

            NF.setText(fotoModificar.getPath());
            int i = fotoModificar.getName().lastIndexOf(".");
            extensiónFoto = fotoModificar.getName().substring(i);

        }
    }//GEN-LAST:event_selecImagenActionPerformed

    public static File fotoModificar;
    String extensiónFoto;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NF;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton ejecEd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton radBut1;
    private javax.swing.JRadioButton radBut2;
    private javax.swing.JRadioButton radBut3;
    private javax.swing.JRadioButton radBut4;
    private javax.swing.JRadioButton radBut5;
    private javax.swing.JButton selecImagen;
    // End of variables declaration//GEN-END:variables
}
